server:
  port: 13000

spring:
  application:
    name: queue-service
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    generate-ddl: true
    database: h2
    defer-datasource-initialization: true
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb
    username: sa
    password:
  cache:
    type: redis
  data:
    redis:
      host: redis-service
      port: 6379
      timeout: 2000

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://service-discovery:8761/eureka

logging:
  level:
    com.example.queueservice: DEBUG
  pattern:
    correlation: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: B3
      produce: B3
  zipkin:
    tracing:
      endpoint: http://zipkin-service:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: info, health, prometheus, metrics
  metrics:
    tags:
      application: ${spring.application.name}
  endpoint:
    health:
      show-details: always

springdoc:
  api-docs:
    version: openapi_3_1
    enabled: true
  enable-spring-security: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

  feign:
    client:
      config:
        default:
          loggerLevel: FULL