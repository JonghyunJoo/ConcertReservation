server:
  port: 16000

spring:
  application:
    name: wallet-service
  datasource:
    url: jdbc:mysql://mysql-wallet-service.mysql-wallet-ns.svc.cluster.local:3306/wallet-db
    username: root
    password: root

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    generate-ddl: false

  kafka:
    producer:
      bootstrap-servers: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: consumerGroup
      auto-offset-reset: earliest
      bootstrap-servers: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: B3
      produce: B3
  zipkin:
    tracing:
      endpoint: http://zipkin-service:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: info, health, prometheus, metrics
  metrics:
    tags:
      application: ${spring.application.name}
  endpoint:
    health:
      show-details: always

springdoc:
  api-docs:
    version: openapi_3_1
    enabled: true
  enable-spring-security: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json


logging:
  level:
    com.example.walletservice: DEBUG
