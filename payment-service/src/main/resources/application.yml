server:
  port: 15000

spring:
  application:
    name: payment-service

  datasource:
    url: jdbc:mysql://mysql-payment-service.mysql-payment-ns.svc.cluster.local:3306/payment-db
    username: root
    password: root

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    generate-ddl: false

  kafka:
    producer:
      bootstrap-servers: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: consumerGroup
      auto-offset-reset: earliest
      bootstrap-servers: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


management:
#  tracing:
#    sampling:
#      probability: 1.0
#    propagation:
#      consume: B3
#      produce: B3
#  zipkin:
#    tracing:
#      endpoint: http://zipkin-service:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: info, health, prometheus, metrics
  metrics:
    tags:
      application: ${spring.application.name}
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    configs:
      default:
        failure-rate-threshold: 50
        slow-call-rate-threshold: 80
        slow-call-duration-threshold: 10s
        permitted-number-of-calls-in-half-open-state: 3
        max-wait-duration-in-half-open-state: 0
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        minimum-number-of-calls: 10
        wait-duration-in-open-state: 10s
    instances:
      default-circuitbreaker:
        base-config: default

springdoc:
  api-docs:
    version: openapi_3_1
    enabled: true
  enable-spring-security: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

logging:
  level:
    com.example.paymentservice: DEBUG
